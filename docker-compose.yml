version: '3'

services:

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
      - MONGO_INITDB_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_INITDB_PASSWORD=${MONGO_DB_PASSWORD}
    volumes:
      - ./_data/mongo:/data/db
      - ./docker/_mongo/fixtures:/import
      - ./docker/_mongo/scripts/init.sh:/docker-entrypoint-initdb.d/setup.sh
    ports:
      - '27017:27017'

  postgres:
    container_name: postgres
    image: postgres:12
    restart: on-failure
    env_file: .env
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=app_db_user
      - POSTGRES_PASSWORD=supersecretpassword
      - POSTGRES_PORT=5432
    ports:
      - '5432:5432'
    volumes:
      - ./_data/postgres:/var/lib/postgresql/data
      - ./docker/_postgres/scripts/create_test_db.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER' ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:6
    container_name: redis
    restart: always
    env_file: .env
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - '6379:6379'
    volumes:
      - ./_data/redis:/var/lib/redis

  app:
    build: .
    image: app:latest
    container_name: app
    tty: true
    restart: on-failure
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy

  celery:
    build: .
    image: app:latest
    container_name: celery
    restart: on-failure
    command: celery -A config worker -l INFO
#    command: [
#      "celery",
#      "-A",
#      "config",
#      "worker",
#      "-c",
#      "1",
#      "-l",
#      "INFO",
#      "--without-heartbeat",
#      "--without-gossip",
#      "--without-mingle",
#    ]
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DJANGO_WSGI=config.wsgi
      - DEBUG=False
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

networks:
  default: