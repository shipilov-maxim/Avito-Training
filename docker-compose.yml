version: '3'

services:

  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    env_file: .env
    volumes:
      - ./_data/mongo:/data/db
      - ./docker/_mongo/fixtures:/import
      - ./docker/_mongo/scripts/init.sh:/docker-entrypoint-initdb.d/setup.sh
    ports:
      - "27017:27017"

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'

  app:
    build: .
    image: app:latest
    container_name: app
    tty: true
    restart: on-failure
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      - mongo

  celery:
    build: .
    tty: true
    command: [
            "celery",
            "-A",
            "config",
            "worker",
            "-c",
            "1",
            "-l",
            "INFO",
            "--without-heartbeat",
            "--without-gossip",
            "--without-mingle",
          ]

    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - app
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DJANGO_WSGI=config.wsgi

volumes:
  pg_data:
networks:
  default: